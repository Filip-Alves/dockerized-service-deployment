name: Deploy Docker Service

on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      image_name: ${{ steps.prepare.outputs.image_name }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare image name
        id: prepare
        run: |
          echo "image_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.prepare.outputs.image_name }}:${{ github.sha }}
            ghcr.io/${{ steps.prepare.outputs.image_name }}:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to WSL instance via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            IMAGE_NAME="ghcr.io/${{ needs.build-and-push.outputs.image_name }}"
            IMAGE_TAG="${{ github.sha }}"

            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

            docker pull $IMAGE_NAME:$IMAGE_TAG

            docker stop node-service || true
            docker rm node-service || true

            docker run -d \
              --name node-service \
              --restart always \
              -p 3000:3000 \
              -e APP_USERNAME=${{ secrets.APP_USERNAME }} \
              -e APP_PASSWORD=${{ secrets.APP_PASSWORD }} \
              -e APP_SECRET_MESSAGE="${{ secrets.APP_SECRET_MESSAGE }}" \
              $IMAGE_NAME:$IMAGE_TAG
